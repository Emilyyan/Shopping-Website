{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/app.router.ts","./src/app/checkout/checkout.component.css","./src/app/checkout/checkout.component.html","./src/app/checkout/checkout.component.ts","./src/app/dashboard/dashboard.component.css","./src/app/dashboard/dashboard.component.html","./src/app/dashboard/dashboard.component.ts","./src/app/home/home.component.css","./src/app/home/home.component.html","./src/app/home/home.component.ts","./src/app/navbar/navbar.component.css","./src/app/navbar/navbar.component.html","./src/app/navbar/navbar.component.ts","./src/app/order-detail/order-detail.component.css","./src/app/order-detail/order-detail.component.html","./src/app/order-detail/order-detail.component.ts","./src/app/product-detail/product-detail.component.css","./src/app/product-detail/product-detail.component.html","./src/app/product-detail/product-detail.component.ts","./src/app/shoppingcart/shoppingcart.component.css","./src/app/shoppingcart/shoppingcart.component.html","./src/app/shoppingcart/shoppingcart.component.ts","./src/app/sign-in/sign-in.component.css","./src/app/sign-in/sign-in.component.html","./src/app/sign-in/sign-in.component.ts","./src/app/sign-up/sign-up.component.css","./src/app/sign-up/sign-up.component.html","./src/app/sign-up/sign-up.component.ts","./src/app/stock-alert/stock-alert.component.css","./src/app/stock-alert/stock-alert.component.html","./src/app/stock-alert/stock-alert.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<router-outlet></router-outlet>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","//The component class code, written in typescript\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Shopping Website';\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppComponent } from './app.component';\n\nimport { NgModule } from '@angular/core';\nimport { routing } from './app.router';\n\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { SignInComponent } from './sign-in/sign-in.component';\nimport { SignUpComponent } from './sign-up/sign-up.component';\nimport { HomeComponent } from './home/home.component';\nimport { ShoppingcartComponent } from './shoppingcart/shoppingcart.component';\nimport { CheckoutComponent } from './checkout/checkout.component';\nimport { ProductDetailComponent } from './product-detail/product-detail.component';\nimport { StockAlertComponent } from './stock-alert/stock-alert.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { OrderDetailComponent } from './order-detail/order-detail.component';\n\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n\nimport {\n  MatAutocompleteModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatStepperModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatToolbar,\n  MatIconRegistry\n} from '@angular/material';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    SignInComponent,\n    HomeComponent,\n    ShoppingcartComponent,\n    SignUpComponent,\n    ProductDetailComponent,\n    DashboardComponent,\n    CheckoutComponent,\n    ProductDetailComponent,\n    OrderDetailComponent,\n    StockAlertComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatMenuModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatGridListModule,\n    MatCardModule,\n    MatDividerModule,\n    MatIconModule,\n    MatTabsModule,\n    routing,\n    MatDialogModule,\n    ReactiveFormsModule,\n    MatListModule,\n    FormsModule,\n    MatTableModule,\n    MatListModule,\n    MatDividerModule,\n    MatPaginatorModule,\n    MatTableModule,\n    HttpClientModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatSelectModule,\n    MatRadioModule,\n    MatDividerModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  entryComponents: [\n    SignInComponent, \n    SignUpComponent,\n    ProductDetailComponent,\n    OrderDetailComponent,\n    StockAlertComponent\n  ]\n})\nexport class AppModule { }\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Routes, RouterModule } from '@angular/router';\nimport { SignInComponent } from './sign-in/sign-in.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { HomeComponent } from './home/home.component';\nimport { ShoppingcartComponent } from './shoppingcart/shoppingcart.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { CheckoutComponent } from './checkout/checkout.component';\n\nconst appRoutes: Routes = [\n    {\n      path: '', \n      component: NavbarComponent,\n      children: [\n        { path: '', component: HomeComponent, pathMatch: 'full'},\n        //{ path: 'signin', component: SignInComponent},\n        { path: 'cart', component: ShoppingcartComponent},\n        { path: 'dashboard', component: DashboardComponent},\n        { path: 'checkout', component: CheckoutComponent}\n      ]\n    }\n  ];\n\nexport const routing = RouterModule.forRoot(appRoutes);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.router.ts","module.exports = \".content{\\n    width: 90%;\\n    margin: 6em auto;\\n}\\n.upper{\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n    -ms-flex-pack: distribute;\\n        justify-content: space-around;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/checkout/checkout.component.css\n// module id = ./src/app/checkout/checkout.component.css\n// module chunks = main","module.exports = \"<div class=\\\"content\\\">\\n\\n  <h4>Checkout</h4>\\n\\n  <form [formGroup]=\\\"formGroup\\\" #f=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(f)\\\">\\n    <mat-horizontal-stepper #stepper=\\\"matHorizontalStepper\\\" formArrayName=\\\"formArray\\\" linear>\\n      <mat-step formGroupName=\\\"0\\\" [stepControl]=\\\"formArray.get([0])\\\">\\n        <h5>Shipping</h5>\\n        <p>(required fields *)</p>\\n        <ng-template matStepLabel>Shipping Info</ng-template>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"First name\\\" formControlName=\\\"fname\\\" [(ngModel)]=\\\"fname\\\" required>\\n        </mat-form-field>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Last name\\\" formControlName=\\\"lname\\\" [(ngModel)]=\\\"lname\\\" required>\\n        </mat-form-field>\\n        <br/>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Address 1\\\" formControlName=\\\"addr1\\\" [(ngModel)]=\\\"addr1\\\" required>\\n        </mat-form-field>\\n        <mat-form-field>\\n            <input matInput placeholder=\\\"Address 2\\\" formControlName=\\\"addr2\\\" [(ngModel)]=\\\"addr2\\\">\\n          </mat-form-field>\\n        <br/>\\n        <mat-form-field>\\n          <mat-select placeholder=\\\"Choose your state\\\" formControlName=\\\"state\\\" [(ngModel)]=\\\"selectedState\\\" required>\\n            <mat-option *ngFor=\\\"let state of states\\\" [value]=\\\"state\\\">{{state}}</mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"City\\\" formControlName=\\\"city\\\" [(ngModel)]=\\\"city\\\" required>\\n        </mat-form-field>\\n        <br>\\n        <mat-form-field>\\n          <input matInput #zipcode placeholder=\\\"Zip Code\\\" formControlName=\\\"zip\\\" maxlength=\\\"5\\\" [(ngModel)]=\\\"zip\\\" required>\\n          <mat-hint align=\\\"end\\\">{{zipcode.value.length}} / 5</mat-hint>\\n        </mat-form-field>\\n        <mat-form-field>\\n          <input type=\\\"tel\\\" matInput placeholder=\\\"Phone Number\\\" formControlName=\\\"phone\\\" maxlength=\\\"10\\\" [(ngModel)]=\\\"phone\\\" required>\\n        </mat-form-field>\\n        <div>\\n          <button mat-button (click)=\\\"fillAddress()\\\" type=\\\"button\\\">Use saved address</button>\\n          <button mat-button matStepperNext type=\\\"button\\\">Next</button>\\n        </div>\\n      </mat-step>\\n      <mat-step formGroupName=\\\"1\\\" [stepControl]=\\\"formArray.get([1])\\\">\\n        <h5>Payment</h5>\\n        <ng-template matStepLabel>Payment Info</ng-template>\\n        <p>* Sorry! We only accept payment via Paypal by this point.</p>\\n        <mat-radio-group formControlName=\\\"payment\\\" required>\\n          <mat-radio-button value=\\\"credit\\\" disabled=\\\"true\\\">Credit Card</mat-radio-button>\\n          <mat-radio-button value=\\\"paypal\\\">Paypal</mat-radio-button>\\n        </mat-radio-group>\\n        <br><br>\\n        <div>\\n          <button mat-button matStepperPrevious type=\\\"button\\\">Back</button>\\n          <button mat-button matStepperNext type=\\\"button\\\">Next</button>\\n        </div>\\n      </mat-step>\\n      <mat-step>\\n        <ng-template matStepLabel>Place Order</ng-template>\\n        <h5>Review Your Order</h5>\\n        <div class=\\\"reviewbox\\\">\\n          <div class=\\\"upper\\\">\\n              <div class=\\\"left\\\">\\n                <b>Shipping Address: </b><br>       \\n                {{fname}} {{lname}}<br>\\n                {{addr1}}<br>\\n                {{addr2}}<br>\\n                {{phone}}<br>\\n                {{city}}, {{selectedState}}, {{zip}}<br>\\n              </div>\\n              <div class=\\\"right\\\">\\n                <b>Payment method: </b> PayPal\\n              </div>\\n          </div>\\n          <div class=\\\"lower\\\">\\n            <mat-table #table [dataSource]=\\\"dataSource\\\">\\n              <!-- Name Column -->\\n              <ng-container matColumnDef=\\\"name\\\">\\n                <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </mat-cell>\\n                </ng-container>\\n              <!-- Quantity Column -->\\n              <ng-container matColumnDef=\\\"quantity\\\">\\n                <mat-header-cell *matHeaderCellDef> Quantity </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let element\\\">{{element.quantity}}</mat-cell>\\n              </ng-container>\\n              <!-- Price Column -->\\n              <ng-container matColumnDef=\\\"price\\\">\\n                <mat-header-cell *matHeaderCellDef> Unit Price </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let element\\\"> ${{element.price}} </mat-cell>\\n              </ng-container>\\n            \\n              <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n              <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n            </mat-table>\\n            <br>\\n            <h5>Subtotal: $ {{subTotal}}</h5>\\n          </div>    \\n          <br>\\n        </div>\\n        <div>\\n          <button mat-button (click)=\\\"stepper.reset()\\\">Clear form</button>\\n          <button mat-button>Place your order</button>\\n        </div>\\n      </mat-step>\\n    </mat-horizontal-stepper>\\n  </form>\\n  \\n\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/checkout/checkout.component.html\n// module id = ./src/app/checkout/checkout.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { NgForm } from '@angular/forms';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { FormControl, AbstractControl } from '@angular/forms/src/model';\nimport { User, CartItem, Order, Address, Product } from '../interfaces';\nimport { MatTableDataSource } from '@angular/material/table';\n\n@Component({\n  selector: 'app-checkout',\n  templateUrl: './checkout.component.html',\n  styleUrls: ['./checkout.component.css']\n})\nexport class CheckoutComponent implements OnInit {\n  email: string = \"sp@gmail.com\"; //logged in user email account (session)\n  profile: User; // User object retrieved from server\n  cart: CartItem[];\n  // Initialize the Order object to be sent to server\n  order: Order = {products: this.cart, shipping: null, status: \"processing\"};\n  products: Product[] = [];\n  productArray: CartItem[] = [];\n  formGroup: FormGroup;\n  subTotal: number = 0;\n\n  dataSource = new MatTableDataSource<any>();\n\n  /* 2-way binding FORM data */\n  fname: string;\n  lname: string;\n  addr1: string;\n  addr2: string = \"\";\n  selectedState: string;\n  city: string;\n  zip: number;\n  phone: number;\n  /* Returns a FormArray with the name 'formArray' */\n  get formArray(): AbstractControl | null {\n    return this.formGroup.get('formArray');\n  }\n\n  constructor(private _formBuilder: FormBuilder, private httpClient:HttpClient) { }\n\n  displayedColumns = ['name', 'quantity', 'price'];\n\n  ngOnInit() {\n    this.formGroup = this._formBuilder.group({\n      formArray: this._formBuilder.array([\n        this._formBuilder.group({\n          fname: ['', Validators.required],\n          lname: ['', Validators.required],\n          state: ['', Validators.required],\n          city: ['', Validators.required],\n          addr1: ['', Validators.required],\n          addr2: [''],\n          zip: ['', Validators.required],\n          phone: ['', Validators.required]\n        }),\n        this._formBuilder.group({\n          payment: ['', Validators.required]\n        })\n      ])\n    });\n\n    /* Get saved address for a user email account */\n    this.httpClient.get(`https://my-json-server.typicode.com/Emilyyan/Shopping-Website/Users?email=${this.email}`)\n    .subscribe(\n      (data:any[]) => {\n        if(data.length) {\n          this.profile = data[0];\n        }\n      },\n      error => console.log(\"Error: \", error),\n      () => { }\n    );\n\n    /* Get cart items for a user email account \n    this.httpClient.get(`https://my-json-server.typicode.com/Emilyyan/Shopping-Website/Cart?email=${this.email}`)\n    .subscribe(\n      (data: any[]) => {\n        if(data.length) {\n          // add cart items to the order\n          this.order.products = data[0].items;\n          this.cart = data[0].items;\n        }\n      }\n    );*/\n    this.getCart(this.email).then(_ =>{\n      return this.getProducts();\n    }).then(_ =>{\n      for(let p of this.cart){\n        let obj = this.getProductDetail(p.pid);\n        let citem: CartItem = { pid: p.pid, quantity: p.quantity, name: obj.name, price: obj.price };\n        this.productArray.push(citem);\n        this.subTotal += citem.quantity * citem.price;\n      }\n      this.dataSource.data = this.productArray;\n    });\n\n  }\n  \n  /* \n    Make a GET request to retrieve all cart items of a user from server\n    Given the user email, would return a promise.\n  */\n  private getCart(email: string){\n    let promise = new Promise((resolve, reject) => {\n      let apiURL = `https://my-json-server.typicode.com/Emilyyan/Shopping-Website/Cart?email=${email}`;\n      this.httpClient.get(apiURL)\n        .toPromise()\n        .then(\n          (data: any[]) => {\n            if(data.length) {\n              // add cart items to the order\n              this.order.products = data[0].items;\n              this.cart = data[0].items;\n            }\n            resolve();\n          },\n          err => {\n            reject();\n          }\n        );\n    });\n    return promise;\n  }\n\n  /* \n    Make a GET request to retrieve a list of products from server\n    Would return a promise.\n  */\n  private getProducts(){\n    let promise = new Promise((resolve, reject) => {\n      let apiURL = `https://my-json-server.typicode.com/Emilyyan/Shopping-Website/Products`;\n      this.httpClient.get(apiURL)\n        .toPromise()\n        .then(\n          (data:any[]) => {\n            this.products = data;\n            resolve();\n          },\n          err => {\n            reject();\n          }\n        );\n    });\n    return promise;\n  }\n\n  /**\n   * Given the product id,\n   * Would return an object containing all details for that product\n   */\n  private getProductDetail(pid: number){\n    let index = this.products.findIndex(x => x.id === pid);\n    return this.products[index];\n  }\n\n  onSubmit(f: NgForm){\n    // validate the form on submission\n    if(f.invalid === false){\n      let formAddress = {addr_1: this.addr1, addr_2: this.addr2, state: this.selectedState, city: this.city, zip: this.zip, phone: this.phone};\n      // generate an order\n      this.order.shipping = formAddress;\n      console.log(this.order);\n      this.httpClient.post(`https://my-json-server.typicode.com/Emilyyan/Shopping-Website/Orders`, this.order)\n      .subscribe(\n        res => {},\n        error => console.log(error),\n        () => {}\n      ); \n    }\n  }\n\n  private fillAddress(){\n    this.fname = this.profile.firstName;\n    this.lname = this.profile.lastName;\n    this.addr1 = this.profile.address.addr_1;\n    this.addr2 = this.profile.address.addr_2;\n    this.selectedState = this.profile.address.state;\n    this.city = this.profile.address.city;\n    this.zip = this.profile.address.zip;\n    this.phone = this.profile.address.phone;\n  }\n  \n  \n  states = [\n    'Alabama', 'Alaska', 'Arizona', 'Arkansas', 'California', 'Colorado', 'Connecticut', 'Delaware',\n    'Florida', 'Georgia', 'Hawaii', 'Idaho', 'Illinois', 'Indiana', 'Iowa', 'Kansas', 'Kentucky',\n    'Louisiana', 'Maine', 'Maryland', 'Massachusetts', 'Michigan', 'Minnesota', 'Mississippi',\n    'Missouri', 'Montana', 'Nebraska', 'Nevada', 'New Hampshire', 'New Jersey', 'New Mexico',\n    'New York', 'North Carolina', 'North Dakota', 'Ohio', 'Oklahoma', 'Oregon', 'Pennsylvania',\n    'Rhode Island', 'South Carolina', 'South Dakota', 'Tennessee', 'Texas', 'Utah', 'Vermont',\n    'Virginia', 'Washington', 'West Virginia', 'Wisconsin', 'Wyoming'\n  ];\n  \n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/checkout/checkout.component.ts","module.exports = \".demo-tab-group {\\n    border: 1px solid #e8e8e8;\\n  }\\n  \\n.demo-tab-content {\\n    padding: 16px;\\n}\\n  \\n.outline{\\n    width: 70%;\\n    margin-left: auto; \\n    margin-right: auto;\\n}\\n  \\n.half-width{\\n    width:60%;\\n}\\n  \\n.row{\\n    padding : 1em;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dashboard/dashboard.component.css\n// module id = ./src/app/dashboard/dashboard.component.css\n// module chunks = main","module.exports = \"<div style=\\\"text-align: center;\\\">\\n  <div class=\\\"content\\\">\\n    <mat-card class=\\\"outline\\\">\\n        <mat-card-content>\\n          <h2 class=\\\"example-h2\\\">Hi</h2>\\n          <mat-tab-group class=\\\"demo-tab-group\\\">\\n            <mat-tab label=\\\"Account Information\\\">\\n              <div class=\\\"demo-tab-content\\\"  style=\\\"width:80%\\\">          \\n                <form [formGroup]=\\\"formGroup2\\\" #f=\\\"ngForm\\\" (ngSubmit)=\\\"update(f.value)\\\"> \\n                  <mat-list>\\n                    <mat-list-item class=\\\"row\\\">\\n                          <mat-form-field class=\\\"half-width\\\">\\n                            <input matInput formControlName=\\\"firstName\\\" placeholder=\\\"First Name\\\" [(ngModel)]=\\\"user.firstName\\\" required>\\n                          </mat-form-field>\\n                    </mat-list-item>\\n                    <mat-list-item class=\\\"row\\\">\\n                          <mat-form-field class=\\\"half-width\\\">\\n                            <input matInput formControlName=\\\"lastName\\\" placeholder=\\\"Last Name\\\" [(ngModel)]=\\\"user.lastName\\\" required>\\n                          </mat-form-field>\\n                    </mat-list-item>\\n                    <mat-list-item class=\\\"row\\\">\\n                            <mat-form-field class=\\\"half-width\\\">\\n                              <input matInput name=\\\"email\\\" placeholder=\\\"Email\\\" value={{user.email}} disabled>\\n                            </mat-form-field>\\n                    </mat-list-item>\\n                  </mat-list>\\n                  <div>\\n                      <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Update</button>\\n                  </div>\\n                </form>\\n              </div>\\n            </mat-tab>\\n\\n            <mat-tab label=\\\"Order History\\\">\\n              <div class=\\\"demo-tab-content\\\">\\n                  <div class=\\\"example-container mat-elevation-z8\\\">\\n                      <mat-table #table [dataSource]=\\\"dataSource\\\">\\n                        <ng-container matColumnDef=\\\"date\\\">\\n                          <mat-header-cell *matHeaderCellDef> Order Date </mat-header-cell>\\n                          <mat-cell *matCellDef=\\\"let element\\\"> {{element.date}} </mat-cell>\\n                         </ng-container>\\n                        <!-- Position Column -->\\n                        <ng-container matColumnDef=\\\"number\\\">\\n                          <mat-header-cell *matHeaderCellDef> Order Number </mat-header-cell>\\n                          <mat-cell *matCellDef=\\\"let element\\\">{{element.orderNumber}}</mat-cell>\\n                        </ng-container>\\n                    \\n                        <!-- Name Column -->\\n                        <ng-container matColumnDef=\\\"status\\\">\\n                          <mat-header-cell *matHeaderCellDef> Status </mat-header-cell>\\n                          <mat-cell *matCellDef=\\\"let element\\\"> {{element.status}} </mat-cell>\\n                        </ng-container>\\n\\n                        <!-- Symbol Column -->\\n                        <ng-container matColumnDef=\\\"detail\\\">\\n                          <mat-header-cell *matHeaderCellDef> Detail </mat-header-cell>\\n                          <mat-cell *matCellDef=\\\"let element\\\">\\n                            <button mat-button color=\\\"primary\\\" (click)=\\\"viewDetail(element.orderNumber)\\\">View Details\\n                            </button>\\n                          </mat-cell>\\n                        </ng-container>\\n                    \\n                        <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n                        <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n                      </mat-table>\\n                    \\n                      <mat-paginator #paginator\\n                                     [pageSize]=\\\"5\\\"\\n                                     [pageSizeOptions]=\\\"[5, 10, 20]\\\"\\n                                     [showFirstLastButtons]=\\\"true\\\">\\n                      </mat-paginator>\\n                    </div>\\n              </div>  \\n            </mat-tab>\\n\\n\\n            <mat-tab label=\\\"Saved Address\\\">\\n                <div class=\\\"demo-tab-content\\\"  style=\\\"width:80%\\\">          \\n                    <form [formGroup]=\\\"formGroup1\\\" #f2=\\\"ngForm\\\" (ngSubmit)=\\\"updateAddress(f2.value)\\\"> \\n                      <mat-list>\\n                        <mat-list-item class=\\\"row\\\">\\n                              <mat-form-field class=\\\"half-width\\\">\\n                                <input matInput formControlName=\\\"address1\\\" placeholder=\\\"Address 1\\\" [(ngModel)] = \\\"localAddress.addr_1\\\" required>\\n                              </mat-form-field>\\n                        </mat-list-item>\\n                        <mat-list-item class=\\\"row\\\">\\n                                <mat-form-field class=\\\"half-width\\\">\\n                                  <input matInput name=\\\"address2\\\" placeholder=\\\"Address 2\\\" value=\\\"{{localAddress.addr_2}}\\\">\\n                                </mat-form-field>\\n                        </mat-list-item>\\n                        <mat-list-item class=\\\"row\\\">\\n                            <mat-form-field>\\n                                <mat-select placeholder=\\\"Choose your state\\\" formControlName=\\\"state\\\" [(ngModel)]=\\\"selectedState\\\" required>\\n                                  <mat-option *ngFor=\\\"let state of states\\\" [value]=\\\"state\\\">{{state}}</mat-option>\\n                                </mat-select>\\n                              </mat-form-field>\\n                        </mat-list-item>\\n                        <mat-list-item class=\\\"row\\\">\\n                          <mat-form-field>\\n                            <input matInput placeholder=\\\"City\\\" formControlName=\\\"city\\\" [(ngModel)]=\\\"localAddress.city\\\" required>\\n                          </mat-form-field>\\n                        </mat-list-item>\\n                        <mat-list-item class=\\\"row\\\">\\n                          <mat-form-field>\\n                            <input matInput #zipcode placeholder=\\\"Zip Code\\\" formControlName=\\\"zip\\\" [(ngModel)]=\\\"localAddress.zip\\\" maxlength=\\\"5\\\" required>\\n                            <mat-hint align=\\\"end\\\">{{zipcode.value.length}} / 5</mat-hint>\\n                          </mat-form-field>\\n                        </mat-list-item>\\n                        <mat-list-item class=\\\"row\\\">\\n                          <mat-form-field>\\n                            <input type=\\\"tel\\\" matInput placeholder=\\\"Phone Number\\\" formControlName=\\\"phone\\\" [(ngModel)]=\\\"localAddress.phone\\\" maxlength=\\\"10\\\" required>\\n                          </mat-form-field>\\n                        </mat-list-item>\\n                      </mat-list>\\n                      <div>\\n                          <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Update</button>\\n                      </div>\\n                    </form>\\n                  </div>\\n            </mat-tab>\\n          </mat-tab-group>\\n        </mat-card-content>\\n      </mat-card>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dashboard/dashboard.component.html\n// module id = ./src/app/dashboard/dashboard.component.html\n// module chunks = main","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { NgForm } from '@angular/forms';\nimport { MatPaginator} from '@angular/material';\nimport { MatTableDataSource } from '@angular/material/table';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport { MatDialog } from '@angular/material';\nimport { OrderDetailComponent } from '../order-detail/order-detail.component';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  user = [];\n  selectedState = \"\";\n  localAddress = [];\n  formGroup1: FormGroup;//for saved address tab\n  formGroup2: FormGroup;//for userinfo tab\n  displayedColumns = ['date', 'number', 'status', 'detail'];\n  dataSource = new MatTableDataSource<any>();\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  constructor(private httpClient:HttpClient, private _formBuilder: FormBuilder, public dialog: MatDialog){  }\n\n  ngOnInit() {\n    this.formGroup1 = this._formBuilder.group({\n      state: ['', Validators.required],\n      city: ['', Validators.required],\n      address1: ['', Validators.required],\n      zip: ['', Validators.required],\n      phone: ['', Validators.required]\n    });\n\n    this.formGroup2 = this._formBuilder.group({\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required]\n    });\n    //id should be replaced by the return value from server side\n    //get user info for info and address tabs\n    this.httpClient.get(`https://my-json-server.typicode.com/Emilyyan/Shopping-Website/Users?id=1`)\n    .subscribe(\n      (data:any[]) => {\n        if(data.length) {\n          console.log(data[0]);\n          this.user = data[0];\n          this.localAddress  = data[0].address;\n          this.selectedState = data[0].address.state;\n        }\n      }, \n      error => console.log(\"Error\", error)\n    );\n\n    //order history should be returned from server side after authentication\n    //get order info for order history tab\n    this.httpClient.get(`https://my-json-server.typicode.com/Emilyyan/Shopping-Website/Orders`)\n    .subscribe(\n      (data:any[]) => {\n        if(data.length) {\n          this.dataSource.data = data;\n          //console.log(this.dataSource.data);\n        }\n      }, \n      error => console.log(\"Error\", error)\n    )\n\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n  }\n\n  //update user info tab\n  update = function(userinfo) {\n    if(this.formGroup2.valid){\n    //below link if only for testing front end logic\n      this.httpClient.post(`https://my-json-server.typicode.com/Emilyyan/Shopping-Website/Users`, {email: userinfo.email, first_name: userinfo.firstName, last_name: userinfo.lastName})\n     //this.httpClient.post(`/register-users`, {email: user.email, first_name: user.firstName, last_name: user.lastName})\n        .subscribe(\n          res => console.log(res)\n        )\n    }\n  }\n\n  //update saved address info tab\n  updateAddress = function(changedAddress) {\n    //below link if only for testing front end logic\n    if(this.formGroup1.valid){\n      this.httpClient.post(`https://my-json-server.typicode.com/Emilyyan/Shopping-Website/Users`, {changedAddress})\n      //this.httpClient.post(`/register-users`, {email: user.email, first_name: user.firstName, last_name: user.lastName})\n        .subscribe(\n          res => console.log(res)\n        )\n    }\n  }\n\n  viewDetail = function(order_number){\n    console.log(order_number);\n    const dialogRef = this.dialog.open(OrderDetailComponent, {\n      width: '60%',\n      data: {\n        order_number: order_number\n      }\n    });\n\n  }\n\n  states = [\n    'Alabama', 'Alaska', 'Arizona', 'Arkansas', 'California', 'Colorado', 'Connecticut', 'Delaware',\n    'Florida', 'Georgia', 'Hawaii', 'Idaho', 'Illinois', 'Indiana', 'Iowa', 'Kansas', 'Kentucky',\n    'Louisiana', 'Maine', 'Maryland', 'Massachusetts', 'Michigan', 'Minnesota', 'Mississippi',\n    'Missouri', 'Montana', 'Nebraska', 'Nevada', 'New Hampshire', 'New Jersey', 'New Mexico',\n    'New York', 'North Carolina', 'North Dakota', 'Ohio', 'Oklahoma', 'Oregon', 'Pennsylvania',\n    'Rhode Island', 'South Carolina', 'South Dakota', 'Tennessee', 'Texas', 'Utah', 'Vermont',\n    'Virginia', 'Washington', 'West Virginia', 'Wisconsin', 'Wyoming'\n  ];\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/dashboard.component.ts","module.exports = \".parent-container{\\n    max-width: 90%;\\n    margin: 0 auto;\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n    -ms-flex-wrap: wrap;\\n        flex-wrap: wrap;\\n    -ms-flex-pack: distribute;\\n        justify-content: space-around;\\n}\\n.example-card {\\n    max-width: 250px;\\n    min-width: 200px;\\n    -ms-flex-preferred-size: 30%;\\n        flex-basis: 30%;\\n    margin-bottom: 2em;\\n}\\n.in-stock{\\n    color: #2e7b32;\\n}\\n.out-of-stock{\\n    color: #d32f2f;\\n}\\n.game-img{\\n    width: 60%;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/home.component.css\n// module id = ./src/app/home/home.component.css\n// module chunks = main","module.exports = \"<!--the Homepage component template, written in HTML.-->\\n<div style=\\\"text-align:center\\\">\\n  <div class=\\\"content\\\">\\n    <span class=\\\"spacer\\\"></span>\\n    <mat-form-field>\\n      <input matInput placeholder=\\\"Search Items here ...\\\">\\n    </mat-form-field>\\n    <button mat-icon-button color=\\\"primary\\\"><mat-icon>search</mat-icon></button>\\n\\n    <div class=\\\"parent-container\\\">\\n      <mat-card class=\\\"example-card\\\" *ngFor=\\\"let p of products\\\">\\n        <img mat-card-image src={{p.img}} class=\\\"game-img\\\" alt=\\\"Product Image\\\">\\n        <mat-card-content>\\n          <mat-card-title>{{p.name}}</mat-card-title>\\n          <mat-card-subtitle>\\n            ${{p.price}} &nbsp;&nbsp;&nbsp;&nbsp;\\n            <span *ngIf=\\\"p.stock > 0\\\" class=\\\"in-stock\\\">In Stock</span>\\n            <span *ngIf=\\\"p.stock == 0\\\" class=\\\"out-of-stock\\\">Out of Stock</span>\\n          </mat-card-subtitle>\\n        </mat-card-content>\\n        <mat-card-actions>\\n          <button mat-button color=\\\"primary\\\" (click)=\\\"openDetail(p.id)\\\">Details\\n            <mat-icon>open_in_new</mat-icon>\\n          </button>\\n          <button mat-button color=\\\"accent\\\" (click)=\\\"addToCart(p.id)\\\">Add to Cart\\n            <mat-icon>add_shopping_cart</mat-icon>\\n          </button>\\n        </mat-card-actions>\\n      </mat-card>\\n    </div>\\n  </div>  \\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/home.component.html\n// module id = ./src/app/home/home.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { MatDialog } from '@angular/material';\nimport { Product, CartItem } from '../interfaces';\nimport { ProductDetailComponent } from '../product-detail/product-detail.component';\nimport { StockAlertComponent } from '../stock-alert/stock-alert.component';\nimport { ElementSchemaRegistry } from '@angular/compiler';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\n\nexport class HomeComponent implements OnInit {\n  products : Product[];\n  cart: CartItem[];\n  email : string = \"sp@gmail.com\"; //user email (session)\n  constructor(private httpClient:HttpClient, public dialog: MatDialog){  }\n\n  ngOnInit() {\n    this.httpClient.get(`https://my-json-server.typicode.com/Emilyyan/Shopping-Website/Products`)\n    .subscribe(\n      (data:any[]) => {\n        if(data.length) {\n          //console.log(data);\n          this.products = data;\n        }\n      }\n    );\n\n    this.httpClient.get(`https://my-json-server.typicode.com/Emilyyan/Shopping-Website/Cart?email=${this.email}`, {observe: 'response'})\n    .subscribe(\n      (data) => {\n        console.log(data.status);\n        //if(data.body[0].length) {\n        this.cart = data.body[0].items;\n          //console.log(data.body[0]);\n          //console.log(this.cart);\n        //}\n      }\n    );\n  }\n\n  private openDetail(PID: number) {\n    const dialogRef = this.dialog.open(ProductDetailComponent, {\n      height: '60%',\n      width: '60%',\n      data: {\n        PID: PID\n      }\n    });\n  }\n\n  /**\n   * Get stock of a product with pid\n   * return true if the quantity doesn't exceed stock\n   */\n  private validQuantity(PID: number, quantity: number){\n    let s = this.products.find(x => x.id === PID).stock;\n    if(s < quantity){\n      this.dialog.open(StockAlertComponent, {width: '40%'});\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Add product to cart and send POST request\n   */\n  private addToCart(PID: number){\n    //find quantity of product with pid\n    //console.log(this.cart);\n    let idx = this.cart.findIndex(x => x.pid === PID);\n    //if that item wasn't in cart => check stock, then add to cart with quantity 1  \n    if(idx >= 0){\n      if(!this.validQuantity(PID, this.cart[idx].quantity+1))\n        return;\n      this.cart[idx].quantity += 1;    \n    }//else => check stock, then increase quantity by 1\n    else{\n      if(!this.validQuantity(PID, 1))\n        return;\n      this.cart.push({pid: PID, quantity: 1});\n    }\n    this.httpClient.post(`https://my-json-server.typicode.com/Emilyyan/Shopping-Website/Cart`, {email: this.email, items: this.cart})\n    .subscribe(\n      (data) => console.log(data)\n    );    \n  }\n\n  \n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/home.component.ts","module.exports = \".fixed-header{\\n    /*overflow: auto;*/\\n    top: 0;\\n    left: 0;\\n    position: fixed;\\n    z-index: 999;\\n}\\n.spacer {\\n    -webkit-box-flex: 1;\\n        -ms-flex: 1 1 auto;\\n            flex: 1 1 auto;\\n}\\n.mdl-badge[data-badge]::after{\\n  font-size: .3em;\\n  width: 2em;\\n  height: 2em;\\n}\\n.mdl-badge[data-badge]::after {\\n  top: -1em;\\n  right: -1em;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/navbar/navbar.component.css\n// module id = ./src/app/navbar/navbar.component.css\n// module chunks = main","module.exports = \"<div>\\n    <mat-toolbar class=\\\"fixed-header\\\" color=\\\"primary\\\">\\n        <mat-toolbar-row>\\n            <a mat-button routerLink=\\\"/\\\"><mat-icon>home</mat-icon></a>\\n            <span class=\\\"spacer\\\"></span>\\n            <a mat-icon-button routerLink=\\\"/cart\\\"><mat-icon>shopping_cart</mat-icon></a>\\n            <!-- *ngIf=\\\"statusCode != 200\\\" -->\\n            <span >\\n                <button mat-button (click)=\\\"openSignin()\\\">Sign In</button>\\n                <button mat-button (click)=\\\"openSignup()\\\">Sign Up</button>\\n            </span>\\n            <span *ngIf=\\\"statusCode === 200\\\">\\n                <a mat-icon-button routerLink=\\\"/dashboard\\\"><mat-icon>account_box</mat-icon></a>\\n            </span> \\n        </mat-toolbar-row> \\n    </mat-toolbar>\\n</div>\\n<router-outlet></router-outlet>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/navbar/navbar.component.html\n// module id = ./src/app/navbar/navbar.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { HttpClient } from '@angular/common/http';\nimport { SignInComponent } from '../sign-in/sign-in.component';\nimport { SignUpComponent } from '../sign-up/sign-up.component';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit{\n  email: string = \"sp@gmail.com\";\n  statusCode: number;\n  constructor(private httpClient:HttpClient, public dialog: MatDialog) {}\n\n  ngOnInit() {\n    //retrieve status code to decide if the user has logged in\n    this.httpClient.get(`https://my-json-server.typicode.com/Emilyyan/Shopping-Website/Users?email=${this.email}`, {observe: 'response'})\n    .subscribe(\n      (data) => {\n        //console.log(data.status);\n        this.statusCode = data.status;\n      }\n    );\n  }\n\n  openSignin() {\n    const dialogRef = this.dialog.open(SignInComponent, {\n      height: '45%',\n      width: '40%'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(`Dialog result: ${result}`);\n    });\n  }\n\n  openSignup() {\n    const dialogRef = this.dialog.open(SignUpComponent, {\n      height: '45%',\n      width: '40%'\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/navbar/navbar.component.ts","module.exports = \".row{\\n    padding-top: 1em;\\n}\\n\\n.thick{\\n    font-weight: bold;\\n}\\n\\n.page-container{\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n}\\n\\n.left-container{\\n    -webkit-box-flex: 1;\\n        -ms-flex: 1;\\n            flex: 1;\\n}\\n\\n.right-container{\\n    -webkit-box-flex: 1;\\n        -ms-flex: 1;\\n            flex: 1;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/order-detail/order-detail.component.css\n// module id = ./src/app/order-detail/order-detail.component.css\n// module chunks = main","module.exports = \"<h5>ORDER DETAILS</h5>\\n<mat-divider></mat-divider>\\n\\n<div class=\\\"page-container\\\">\\n  <div class=\\\"left-container\\\">\\n    <div class=\\\"row\\\">\\n      <span class=\\\"thick\\\" >Order Number:</span>\\n      <span >{{data?.order_number}}</span>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <span class=\\\"thick\\\" >Status:</span>\\n      <span >{{order?.status}}</span>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"right-container\\\">\\n    <div class=\\\"row\\\">\\n      <span class=\\\"thick\\\" >Shipping Address:</span>\\n    </div>\\n    <div>\\n      {{order?.shipping.addr_1}}<br>\\n      {{order?.shipping.addr_2}}<br>\\n      {{order?.shipping.city}}, {{order?.shipping.state}}, {{order?.shipping.zip}}<br>\\n      {{order?.shipping.phone}}<br>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n<div class=\\\"row\\\">\\n  <span class=\\\"thick\\\" >Purchased Items:</span>\\n</div>\\n\\n<mat-table #table [dataSource]=\\\"dataSource\\\">\\n  <!-- Name Column -->\\n  <ng-container matColumnDef=\\\"name\\\">\\n    <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </mat-cell>\\n    </ng-container>\\n  <!-- Quantity Column -->\\n  <ng-container matColumnDef=\\\"quantity\\\">\\n    <mat-header-cell *matHeaderCellDef> Quantity </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let element\\\">{{element.quantity}}</mat-cell>\\n  </ng-container>\\n  <!-- Price Column -->\\n  <ng-container matColumnDef=\\\"price\\\">\\n    <mat-header-cell *matHeaderCellDef> Unit Price </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let element\\\"> ${{element.price}} </mat-cell>\\n  </ng-container>\\n\\n  <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n  <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n</mat-table>\\n<br>\\n<b>Subtotal: </b>$ {{subTotal}}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/order-detail/order-detail.component.html\n// module id = ./src/app/order-detail/order-detail.component.html\n// module chunks = main","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { HttpClient } from '@angular/common/http';\nimport { MAT_DIALOG_DATA } from '@angular/material';\nimport { Order, CartItem , Product} from '../interfaces';\nimport { MatTableDataSource } from '@angular/material/table';\n\n\n@Component({\n  selector: 'app-order-detail',\n  templateUrl: './order-detail.component.html',\n  styleUrls: ['./order-detail.component.css']\n})\nexport class OrderDetailComponent implements OnInit {\n  order: Order;\n  products: Product[] = [];\n  productArray: CartItem[] = [];\n  dataSource = new MatTableDataSource<any>();\n  subTotal: number = 0;\n\n  constructor(private httpClient:HttpClient, @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  displayedColumns = ['name', 'quantity', 'price'];\n\n  ngOnInit() {\n\n    this.getOrder(this.data.order_number)\n      .then( data => {\n        this.order = data[0];\n        return this.getProducts();\n      })\n      .then( _ => {\n        for(let p of this.order.products){\n          let obj = this.getProductDetail(p.pid);\n          let orderitem: CartItem = { pid: p.pid, quantity: p.quantity, name: obj.name, price: obj.price };\n          this.productArray.push(orderitem);\n          this.subTotal += orderitem.quantity * orderitem.price;\n        }\n        this.dataSource.data = this.productArray;\n      });\n  \n  }\n\n\n  /* \n    Make a GET request to retrieve an order from server\n    Given the order number, would return a promise.\n  */\n  private getOrder(orderNumber: number){\n    let promise = new Promise((resolve, reject) => {\n      let apiURL = `https://my-json-server.typicode.com/Emilyyan/Shopping-Website/Orders?orderNumber=${orderNumber}`;\n      this.httpClient.get(apiURL)\n        .toPromise()\n        .then(\n          data => {\n            resolve(data);\n          },\n          err => {\n            reject();\n          }\n        );\n    });\n    return promise;\n  }\n\n  /* \n    Make a GET request to retrieve a list of products from server\n    Would return a promise.\n  */\n  private getProducts(){\n    let promise = new Promise((resolve, reject) => {\n      let apiURL = `https://my-json-server.typicode.com/Emilyyan/Shopping-Website/Products`;\n      this.httpClient.get(apiURL)\n        .toPromise()\n        .then(\n          (data:any[]) => {\n            this.products = data;\n            resolve();\n          },\n          err => {\n            reject();\n          }\n        );\n    });\n    return promise;\n  }\n\n  /**\n   * Given the product id,\n   * Would return an object containing all details for that product\n   */\n  private getProductDetail(pid: number){\n    let index = this.products.findIndex(x => x.id === pid);\n    return this.products[index];\n  }\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/order-detail/order-detail.component.ts","module.exports = \"mat-grid-tile {\\n    background: lightblue;\\n  }\\n\\n\\n.page-container{\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n}\\n\\n\\n.left-container{\\n    -webkit-box-flex: 2;\\n        -ms-flex: 2;\\n            flex: 2;\\n}\\n\\n\\n.right-container{\\n    -webkit-box-flex: 2;\\n        -ms-flex: 2;\\n            flex: 2;\\n}\\n\\n\\n.product-img {\\n    max-width: 400px;\\n}\\n\\n\\n.in-stock{\\n    color: #2e7b32;\\n}\\n\\n\\n.out-of-stock{\\n    color: #d32f2f;\\n}\\n\\n\\n.descriptions{\\n    text-align: start;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/product-detail/product-detail.component.css\n// module id = ./src/app/product-detail/product-detail.component.css\n// module chunks = main","module.exports = \"<div style=\\\"text-align:center\\\">\\n  \\n      <div class=\\\"page-container\\\">\\n          <div class=\\\"left-container\\\">\\n              <img class=\\\"product-img\\\" src={{product?.img}} alt=\\\"Product Image\\\">\\n          </div>\\n\\n          <div class=\\\"right-container\\\">\\n              <mat-card-title>{{product?.name}}</mat-card-title>\\n              ${{product?.price}} &nbsp;&nbsp;&nbsp;\\n              <span *ngIf=\\\"product?.stock > 0\\\" class=\\\"in-stock\\\">In Stock</span>\\n              <span *ngIf=\\\"product?.stock == 0\\\" class=\\\"out-of-stock\\\">Out of Stock</span>\\n              <br><br>\\n              <p class=\\\"descriptions\\\">{{product?.desc}}</p>\\n          </div>\\n      </div>\\n  </div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/product-detail/product-detail.component.html\n// module id = ./src/app/product-detail/product-detail.component.html\n// module chunks = main","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material';\nimport { HttpClient } from '@angular/common/http';\nimport { Product } from '../interfaces';\n\n@Component({\n  selector: 'app-product-detail',\n  templateUrl: './product-detail.component.html',\n  styleUrls: ['./product-detail.component.css']\n})\nexport class ProductDetailComponent implements OnInit {\n  product: Product;\n  constructor(private httpClient:HttpClient, @Inject(MAT_DIALOG_DATA) public data: any) { }\n \n\n  ngOnInit() {\n   this.httpClient.get(`https://my-json-server.typicode.com/Emilyyan/Shopping-Website/Products/?id=${this.data.PID}`)\n    .subscribe(\n      (productInfo:any[]) => {\n        if(productInfo.length) {\n          this.product = productInfo[0];\n          console.log(this.product.name);\n        }\n      }\n    ),\n    error => console.log(\"Error\", error)\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/product-detail/product-detail.component.ts","module.exports = \".page-container{\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n}\\n.left-container{\\n    -webkit-box-flex: 3;\\n        -ms-flex: 3;\\n            flex: 3;\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n    -webkit-box-orient: vertical;\\n    -webkit-box-direction: normal;\\n        -ms-flex-direction: column;\\n            flex-direction: column;\\n    min-width: 300px;\\n    padding: 0 2em;\\n}\\n.left-header{\\n    min-height: 64px;\\n    padding: 8px 24px 0;\\n}\\n.mat-form-field {\\n    font-size: 14px;\\n    width: 100%;\\n}\\n.right-container{\\n    -webkit-box-flex: 1;\\n        -ms-flex: 1;\\n            flex: 1;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shoppingcart/shoppingcart.component.css\n// module id = ./src/app/shoppingcart/shoppingcart.component.css\n// module chunks = main","module.exports = \"<div class=\\\"content\\\">\\n  \\n  <div class=\\\"page-container\\\">\\n    <div class=\\\"left-container\\\">\\n      <h4>Shopping Cart</h4>\\n\\n      <mat-table #table [dataSource]=\\\"cartitems\\\">\\n\\n        <!-- Product Column -->\\n        <ng-container matColumnDef=\\\"product\\\">\\n          <mat-header-cell  *matHeaderCellDef>Product</mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let element\\\"> \\n            {{element.name}} \\n          </mat-cell>\\n\\n        </ng-container>\\n    \\n        <!-- Quantity Column -->\\n        <ng-container matColumnDef=\\\"quantity\\\">\\n          <mat-header-cell *matHeaderCellDef>Quantity</mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let element\\\" > \\n            <button mat-icon-button color=\\\"primary\\\" (click)=\\\"element.quantity = element.quantity - 1\\\">\\n              <mat-icon>remove</mat-icon>\\n            </button>\\n            {{element.quantity}} \\n            <button mat-icon-button color=\\\"primary\\\" (click)=\\\"element.quantity = element.quantity + 1\\\">\\n              <mat-icon>add</mat-icon>\\n            </button>\\n            ({{element.stock}} left)\\n          </mat-cell>\\n        </ng-container>\\n    \\n        <!-- Price Column -->\\n        <ng-container matColumnDef=\\\"price\\\">\\n          <mat-header-cell *matHeaderCellDef> Price </mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let element\\\"> ${{element.price}} </mat-cell>\\n        </ng-container>\\n    \\n        <!-- Total Price Column -->\\n        <ng-container matColumnDef=\\\"total_price\\\">\\n          <mat-header-cell *matHeaderCellDef> Total Price</mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let element\\\"> ${{element.quantity * element.price | number: '1.2-2'}} </mat-cell>\\n        </ng-container>\\n    \\n        <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n        <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n      </mat-table>\\n    </div>\\n\\n    <div class=\\\"right-container\\\">\\n      <h5>\\n        Subtotal ({{itemsCnt}} item<span *ngIf=\\\"itemsCnt>1\\\">s</span>): ${{subTotal | number: '1.2-2'}}\\n      </h5>\\n      <button mat-raised-button (click)=\\\"updateCart()\\\">\\n        Update Cart\\n      </button>\\n      <button mat-raised-button color=\\\"accent\\\" routerLink=\\\"/checkout\\\">\\n        Proceed to Checkout\\n        <mat-icon>navigate_next</mat-icon>\\n      </button>\\n      \\n    </div>\\n  </div>\\n\\n</div>\\n\\n  \\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shoppingcart/shoppingcart.component.html\n// module id = ./src/app/shoppingcart/shoppingcart.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { MatTableDataSource, MatDialog} from '@angular/material';\nimport { element } from 'protractor';\nimport { DataSource } from '@angular/cdk/collections';\nimport { DecimalPipe } from '@angular/common';\nimport { CartItem } from '../interfaces';\nimport { getOrCreateContainerRef } from '@angular/core/src/render3/di';\nimport { StockAlertComponent } from '../stock-alert/stock-alert.component';\n\n@Component({\n  selector: 'app-shoppingcart',\n  templateUrl: './shoppingcart.component.html',\n  styleUrls: ['./shoppingcart.component.css']\n})\nexport class ShoppingcartComponent implements OnInit {\n  cartitems : CartItem[];\n  subTotal : number = 0;\n  itemsCnt : number = 0;\n  \n  constructor(private httpClient:HttpClient, public dialog: MatDialog){  }\n\n  ngOnInit() {\n    // example user email: sp@gmail.com\n    this.getCart(\"sp@gmail.com\")\n      .then( data => {\n        let promises = [];  //create a list of promises\n        this.cartitems = data[0].items;\n        \n        for(let item of this.cartitems){\n          promises.push(this.getProduct(item));\n        }\n        //do calculations only after all promises in the list are resolved\n        Promise.all(promises).then( _ => {\n          this.calcSubTotal(this.cartitems); \n          this.countItems(this.cartitems);\n        });\n      })\n      .catch(\n        err => console.log(\"Error: \"+ err)\n      );\n  }\n\n  /* \n    Make a GET request to retrieve cart items from server\n    Given the user email, would return a promise.\n  */\n  private getCart(email: string){\n    let promise = new Promise((resolve, reject) => {\n      let apiURL = `https://my-json-server.typicode.com/Emilyyan/Shopping-Website/Cart?email=${email}`;\n      this.httpClient.get(apiURL)\n        .toPromise()\n        .then(\n          data => {\n            resolve(data);\n          },\n          err => {\n            reject();\n          }\n        );\n    });\n    return promise;\n  }\n\n  /* \n    Make a GET request to retrieve product information from server\n    Given the pid, would return a promise.\n  */\n  private getProduct(item: CartItem){\n    let promise = new Promise((resolve, reject) => {\n      let apiURL = `https://my-json-server.typicode.com/Emilyyan/Shopping-Website/Products?id=${item.pid}`;\n      this.httpClient.get(apiURL)\n        .toPromise()\n        .then(\n          data => {\n            item.name = data[0].name;\n            item.price = data[0].price;\n            item.stock = data[0].stock;\n            resolve(data);\n          },\n          err => {\n            reject();\n          }\n        );\n    });\n    return promise;\n  }\n\n  /*\n    Make a POST request to send updated cart items to server\n  */\n  private updateCart(){\n    if(this.isValid(this.cartitems)){\n      this.httpClient.post(`https://my-json-server.typicode.com/Emilyyan/Shopping-Website/Cart`, this.cartitems)\n      .subscribe(\n        res => console.log(res),\n        error => console.log(error),\n        () => {\n          this.calcSubTotal(this.cartitems);\n          this.countItems(this.cartitems);\n        }\n      ); \n    } \n  }\n  \n  /*\n    Check if the quantity selected is below stock\n   */\n  private isValid(items: CartItem[]){\n    for(let item of items){\n      if(item.quantity > item.stock){\n        this.openAlert();\n        return false;\n      }\n    }\n    return true;\n  }\n\n  displayedColumns = ['product', 'quantity', 'price', 'total_price'];\n\n  /**\n   * Open dialog for stock alert\n   */\n  private openAlert(){\n    const dialogRef = this.dialog.open(StockAlertComponent, {\n      width: '40%'\n    });\n  }\n\n  /*\n    Calculate Subtotal in cart\n   */\n  private calcSubTotal(items: CartItem[]){\n    let s = 0;\n      for(let item of items){\n        s += (item.price * item.quantity);\n      }\n    this.subTotal = s;\n  }\n  /*\n    Count items in cart\n   */\n  private countItems(items: CartItem[]){\n    let count = 0;\n      for(let item of items){\n        count += item.quantity;\n      }\n    this.itemsCnt = count;\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/shoppingcart/shoppingcart.component.ts","module.exports = \".example-container {\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n    -webkit-box-orient: vertical;\\n    -webkit-box-direction: normal;\\n        -ms-flex-direction: column;\\n            flex-direction: column;\\n}\\n    \\n.example-container > * {\\n    width: 100%;\\n}\\n    \\nmat-dialog-content{\\n    display: inline\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/sign-in/sign-in.component.css\n// module id = ./src/app/sign-in/sign-in.component.css\n// module chunks = main","module.exports = \"<mat-dialog-content>  \\n    <h2 mat-dialog-title>Please sign in</h2>\\n    <form #signin=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(signin.value)\\\">\\n        <mat-form-field class=\\\"example-container\\\">\\n            <input ngModel name=\\\"email\\\" matInput placeholder=\\\"Enter your email\\\" [formControl]=\\\"email\\\" required>\\n            <mat-error *ngIf=\\\"email.invalid\\\">{{getErrorMessage()}}</mat-error>\\n        </mat-form-field>\\n        <br>\\n        <mat-form-field  class=\\\"example-container\\\">\\n            <input matInput ngModel name=\\\"password\\\" placeholder=\\\"Enter your password\\\" [type]=\\\"hide ? 'password' : 'text'\\\" required>\\n            <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\n        </mat-form-field>\\n\\n        <mat-dialog-actions>\\n            <!--<button mat-raised-button color=\\\"primary\\\" [mat-dialog-close]=\\\"true\\\">Sign In</button>-->\\n            <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Sign In</button>\\n            <button mat-button mat-dialog-close>Cancel</button>\\n            <!-- The mat-dialog-close directive optionally accepts a value as a result for the dialog. -->\\n            \\n        </mat-dialog-actions>\\n    </form>\\n</mat-dialog-content>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/sign-in/sign-in.component.html\n// module id = ./src/app/sign-in/sign-in.component.html\n// module chunks = main","import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { FormControl, Validators } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-sign-in',\n  templateUrl: './sign-in.component.html',\n  styleUrls: ['./sign-in.component.css']\n})\nexport class SignInComponent{\n  hide = true;\n  email = new FormControl('', [Validators.required, Validators.email]);\n  localRes;\n\n  getErrorMessage() {\n    return this.email.hasError('required') ? 'You must enter a value' :\n        this.email.hasError('email') ? 'Not a valid email' : '';\n  }\n\n  password: string = \"\";\n  firstName : string = \"\";\n  lastName: string = \"\";\n\n  constructor(private httpClient:HttpClient){  }\n\n  onSubmit = function(user) {\n\n    this.httpClient.post(`/login-users`, {email: this.email.value, password: user.password})\n\n    //this.httpClient.get(`/get-users`,{observe: 'response'})\n\n    .subscribe(\n      (data) => {\n\n        if(data.length) {\n          this.firstName = data[0].first_name;\n          this.lastName = data[0].last_name;\n          console.log(this.first_name + \" \" + this.last_name);\n        }\n        \n        /*\n        if(data.length) {\n          this.firstName = data[0].first_name;\n          this.lastName = data[0].last_name;\n          console.log(this.first_name + \" \" + this.last_name);\n        }\n          console.log(user.password);\n          this.firstName = data[0].firstName;\n          this.lasttName = data[0].lastName;\n          console.log(this.firstName+this.lastName);\n        }*/\n        //this.firstName = data.body[0].firstName;\n        //this.lasttName = data.body[0].lastName;\n        //response code\n         //console.log(data.status);\n      }\n    ),\n\n    error => console.log(error);\n  }\n  \n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/sign-in/sign-in.component.ts","module.exports = \".example-container {\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n    -webkit-box-orient: vertical;\\n    -webkit-box-direction: normal;\\n        -ms-flex-direction: column;\\n            flex-direction: column;\\n}\\n    \\n.example-container > * {\\n    width: 100%;\\n}\\n    \\nmat-dialog-content{\\n    display: inline\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/sign-up/sign-up.component.css\n// module id = ./src/app/sign-up/sign-up.component.css\n// module chunks = main","module.exports = \"<mat-dialog-content>  \\n    <h2 mat-dialog-title>Register with us</h2>\\n    <form #f=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(f.value)\\\">\\n        <mat-form-field class=\\\"example-container\\\">\\n            <input matInput ngModel name=\\\"email\\\" placeholder=\\\"Enter your email\\\" [formControl]=\\\"email\\\" required>\\n            <mat-error *ngIf=\\\"email.invalid\\\">{{getErrorMessage()}}</mat-error>\\n        </mat-form-field>\\n        <mat-form-field>\\n            <input matInput ngModel name=\\\"firstName\\\" placeholder=\\\"FirstName\\\" required>\\n        </mat-form-field>\\n        <mat-form-field>\\n            <input matInput ngModel name=\\\"lastName\\\" placeholder=\\\"LastName\\\" required>\\n        </mat-form-field>\\n        <br>\\n        <mat-form-field  class=\\\"example-container\\\">\\n            <input matInput ngModel name=\\\"password\\\" placeholder=\\\"Enter your password\\\" [type]=\\\"hide ? 'password' : 'text'\\\" required>\\n            <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\n        </mat-form-field>\\n\\n        <mat-dialog-actions>\\n             <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Register</button>\\n             <button mat-button mat-dialog-close>Cancel</button>\\n            <!-- The mat-dialog-close directive optionally accepts a value as a result for the dialog. -->\\n            \\n        </mat-dialog-actions>\\n    </form>\\n</mat-dialog-content>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/sign-up/sign-up.component.html\n// module id = ./src/app/sign-up/sign-up.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport {MatDialog} from '@angular/material';\nimport {FormControl, Validators} from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport {NgForm} from '@angular/forms';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.css']\n})\nexport class SignUpComponent{\n  constructor(private httpClient:HttpClient){  }\n\n  hide = true;\n  email = new FormControl('', [Validators.required, Validators.email]);\n\n  //email validation function\n  getErrorMessage() {\n    return this.email.hasError('required') ? 'You must enter a value' :\n        this.email.hasError('email') ? 'Not a valid email' : '';\n  }\n\n  //when click submit, do post\n  onSubmit = function(user) {\n    console.log(user);\n    if (this.email.valid) {\n      console.log(user.lastName);\n      console.log(this.email.value);\n      //hash logic may go here\n     this.httpClient.post(`/register-users`, {email: this.email.value, first_name: user.firstName, last_name: user.lastName, password: user.password})\n      .subscribe(\n        res => console.log(res)\n      );\n      \n    }\n    else\n      console.log(\"fail\");\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/sign-up/sign-up.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/stock-alert/stock-alert.component.css\n// module id = ./src/app/stock-alert/stock-alert.component.css\n// module chunks = main","module.exports = \"<h2 mat-dialog-title>Failed to update cart</h2>\\n<mat-dialog-content>\\n  The selected product quantity exceeds stock! Please try again.\\n</mat-dialog-content>\\n<mat-dialog-actions>\\n  <button mat-button mat-dialog-close>Ok</button>\\n</mat-dialog-actions>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/stock-alert/stock-alert.component.html\n// module id = ./src/app/stock-alert/stock-alert.component.html\n// module chunks = main","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material';\n\n/**\n * Dialog component for stock alert\n * Dialog will show up if stock validation failed\n */\n@Component({\n  selector: 'stock-alert',\n  templateUrl: './stock-alert.component.html',\n  styleUrls: ['./stock-alert.component.css']\n})\nexport class StockAlertComponent implements OnInit {\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any) {}\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/stock-alert/stock-alert.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}