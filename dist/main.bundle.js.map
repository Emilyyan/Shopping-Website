{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/app.router.ts","./src/app/checkout/checkout.component.css","./src/app/checkout/checkout.component.html","./src/app/checkout/checkout.component.ts","./src/app/dashboard/dashboard.component.css","./src/app/dashboard/dashboard.component.html","./src/app/dashboard/dashboard.component.ts","./src/app/home/home.component.css","./src/app/home/home.component.html","./src/app/home/home.component.ts","./src/app/navbar/navbar.component.css","./src/app/navbar/navbar.component.html","./src/app/navbar/navbar.component.ts","./src/app/product-detail/product-detail.component.css","./src/app/product-detail/product-detail.component.html","./src/app/product-detail/product-detail.component.ts","./src/app/shoppingcart/shoppingcart.component.css","./src/app/shoppingcart/shoppingcart.component.html","./src/app/shoppingcart/shoppingcart.component.ts","./src/app/sign-in/sign-in.component.css","./src/app/sign-in/sign-in.component.html","./src/app/sign-in/sign-in.component.ts","./src/app/sign-up/sign-up.component.css","./src/app/sign-up/sign-up.component.html","./src/app/sign-up/sign-up.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<router-outlet></router-outlet>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","//The component class code, written in typescript\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Shopping Website';\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppComponent } from './app.component';\n\nimport { NgModule } from '@angular/core';\nimport { routing } from './app.router';\n\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { SignInComponent } from './sign-in/sign-in.component';\nimport { SignUpComponent } from './sign-up/sign-up.component';\nimport { HomeComponent } from './home/home.component';\nimport { ShoppingcartComponent } from './shoppingcart/shoppingcart.component';\nimport { CheckoutComponent } from './checkout/checkout.component';\nimport { ProductDetailComponent } from './product-detail/product-detail.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { DomSanitizer } from '@angular/platform-browser';\n\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n\nimport {\n  MatAutocompleteModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatStepperModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatToolbar,\n  MatIconRegistry\n} from '@angular/material';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    SignInComponent,\n    HomeComponent,\n    ShoppingcartComponent,\n    SignUpComponent,\n    ProductDetailComponent,\n    DashboardComponent,\n    CheckoutComponent,\n    ProductDetailComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatMenuModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatGridListModule,\n    MatCardModule,\n    MatDividerModule,\n    MatIconModule,\n    MatTabsModule,\n    routing,\n    MatDialogModule,\n    ReactiveFormsModule,\n    MatListModule,\n    FormsModule,\n    MatTableModule,\n    MatListModule,\n    MatDividerModule,\n    MatPaginatorModule,\n    MatTableModule,\n    HttpClientModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatSelectModule,\n    MatRadioModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  entryComponents: [\n    SignInComponent, \n    SignUpComponent,\n    ProductDetailComponent\n  ]\n})\nexport class AppModule { }\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Routes, RouterModule } from '@angular/router';\nimport { SignInComponent } from './sign-in/sign-in.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { HomeComponent } from './home/home.component';\nimport { ShoppingcartComponent } from './shoppingcart/shoppingcart.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { CheckoutComponent } from './checkout/checkout.component';\n\nconst appRoutes: Routes = [\n    {\n      path: '', \n      component: NavbarComponent,\n      children: [\n        { path: '', component: HomeComponent, pathMatch: 'full'},\n        //{ path: 'signin', component: SignInComponent},\n        { path: 'cart', component: ShoppingcartComponent},\n        { path: 'dashboard', component: DashboardComponent},\n        { path: 'checkout', component: CheckoutComponent}\n      ]\n    }\n  ];\n\nexport const routing = RouterModule.forRoot(appRoutes);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.router.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/checkout/checkout.component.css\n// module id = ./src/app/checkout/checkout.component.css\n// module chunks = main","module.exports = \"<div class=\\\"content\\\">\\n\\n  <h4>Checkout</h4>\\n\\n  <mat-horizontal-stepper [linear]=\\\"true\\\" #stepper=\\\"matHorizontalStepper\\\">\\n    <mat-step [stepControl]=\\\"firstFormGroup\\\">\\n      <h5>Shipping</h5>\\n      <p>(required fields *)</p>\\n      <form [formGroup]=\\\"firstFormGroup\\\" #f1=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(f1)\\\">\\n        <ng-template matStepLabel>Shipping Info</ng-template>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"First name\\\" formControlName=\\\"fname\\\" [(ngModel)]=\\\"fname\\\" required>\\n        </mat-form-field>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Last name\\\" formControlName=\\\"lname\\\" [(ngModel)]=\\\"lname\\\" required>\\n        </mat-form-field>\\n        <br/>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Address 1\\\" formControlName=\\\"addr\\\" [(ngModel)]=\\\"addr1\\\" required>\\n        </mat-form-field>\\n        <mat-form-field>\\n            <input matInput placeholder=\\\"Address 2\\\" [(value)]=\\\"addr2\\\">\\n          </mat-form-field>\\n        <br/>\\n        <mat-form-field>\\n          <mat-select placeholder=\\\"Choose your state\\\" formControlName=\\\"state\\\" [(ngModel)]=\\\"selectedState\\\" required>\\n            <mat-option *ngFor=\\\"let state of states\\\" [value]=\\\"state\\\">{{state}}</mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"City\\\" formControlName=\\\"city\\\" [(ngModel)]=\\\"city\\\" required>\\n        </mat-form-field>\\n        <br>\\n        <mat-form-field>\\n          <input matInput #zipcode placeholder=\\\"Zip Code\\\" formControlName=\\\"zip\\\" maxlength=\\\"5\\\" [(ngModel)]=\\\"zip\\\" required>\\n          <mat-hint align=\\\"end\\\">{{zipcode.value.length}} / 5</mat-hint>\\n        </mat-form-field>\\n        <mat-form-field>\\n          <input type=\\\"tel\\\" matInput placeholder=\\\"Phone Number\\\" formControlName=\\\"phone\\\" maxlength=\\\"10\\\" [(ngModel)]=\\\"phone\\\" required>\\n        </mat-form-field>\\n        <div>\\n          <button mat-button (click)=\\\"fillAddress()\\\" type=\\\"button\\\">Use saved address</button>\\n          <button mat-button>Submit</button>\\n          <button mat-button matStepperNext type=\\\"button\\\">Next</button>\\n        </div>\\n      </form>\\n    </mat-step>\\n    <mat-step [stepControl]=\\\"secondFormGroup\\\">\\n      <h5>Payment</h5>\\n      <form [formGroup]=\\\"secondFormGroup\\\">\\n        <ng-template matStepLabel>Payment Info</ng-template>\\n        <p>* Sorry! We only accept payment via Paypal by this point.</p>\\n        <mat-radio-group formControlName=\\\"secondCtrl\\\" required>\\n          <mat-radio-button value=\\\"1\\\" disabled=\\\"true\\\">Credit Card</mat-radio-button>\\n          <mat-radio-button value=\\\"2\\\">Paypal</mat-radio-button>\\n        </mat-radio-group>\\n        <br><br>\\n        <div>\\n          <button mat-button matStepperPrevious>Back</button>\\n          <button mat-button matStepperNext>Next</button>\\n        </div>\\n      </form>\\n    </mat-step>\\n    <mat-step>\\n      <ng-template matStepLabel>Place Order</ng-template>\\n      <h5>Review Your Order</h5>\\n      \\n      <div>\\n        <button mat-button (click)=\\\"onSubmit()\\\">Place your order</button>\\n        <button mat-button (click)=\\\"stepper.reset()\\\">Clear form</button>\\n      </div>\\n    </mat-step>\\n  </mat-horizontal-stepper>\\n\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/checkout/checkout.component.html\n// module id = ./src/app/checkout/checkout.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {NgForm} from '@angular/forms';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport { FormControl } from '@angular/forms/src/model';\nimport {User, Order} from '../interfaces';\n\n@Component({\n  selector: 'app-checkout',\n  templateUrl: './checkout.component.html',\n  styleUrls: ['./checkout.component.css']\n})\nexport class CheckoutComponent implements OnInit {\n  profile: User;\n  firstFormGroup: FormGroup;\n  secondFormGroup: FormGroup;\n\n  fname: string;\n  lname: string;\n  addr1: string;\n  addr2: string = \"\";\n  selectedState: string;\n  city: string;\n  zip: number;\n  phone: number;\n\n  private fillAddress(){\n    this.fname = this.profile.firstName;\n    this.lname = this.profile.lastName;\n    this.addr1 = this.profile.address.addr_1;\n    this.addr2 = this.profile.address.addr_2;\n    this.selectedState = this.profile.address.state;\n    this.city = this.profile.address.city;\n    this.zip = this.profile.address.zip;\n    this.phone = this.profile.address.phone;\n  }\n\n  constructor(private _formBuilder: FormBuilder, private httpClient:HttpClient) { }\n\n  ngOnInit() {\n    this.firstFormGroup = this._formBuilder.group({\n      fname: ['', Validators.required],\n      lname: ['', Validators.required],\n      state: ['', Validators.required],\n      city: ['', Validators.required],\n      addr: ['', Validators.required],\n      zip: ['', Validators.required],\n      phone: ['', Validators.required]\n    });\n    this.secondFormGroup = this._formBuilder.group({\n      secondCtrl: ['', Validators.required]\n    });\n\n    this.httpClient.get(`https://my-json-server.typicode.com/Emilyyan/Shopping-Website/Users?id=3`)\n    .subscribe(\n      (data:any[]) => {\n        if(data.length) {\n          this.profile = data[0];\n        }\n      },\n      error => console.log(\"Error: \", error),\n      () => {\n \n      }\n    )\n  }\n  order: Order;\n  /*export interface Order{\n      products: CartItem[];\n      total_prices: number;\n      status: string;\n  }*/\n  onSubmit(f: NgForm){\n    if(f.invalid){\n      this.httpClient.post(`https://my-json-server.typicode.com/Emilyyan/Shopping-Website/Order`, this.order)\n      .subscribe(\n        res => console.log(res),\n        error => console.log(error),\n        () => {\n        }\n      ); \n    }\n  }\n  \n  \n  states = [\n    'Alabama', 'Alaska', 'Arizona', 'Arkansas', 'California', 'Colorado', 'Connecticut', 'Delaware',\n    'Florida', 'Georgia', 'Hawaii', 'Idaho', 'Illinois', 'Indiana', 'Iowa', 'Kansas', 'Kentucky',\n    'Louisiana', 'Maine', 'Maryland', 'Massachusetts', 'Michigan', 'Minnesota', 'Mississippi',\n    'Missouri', 'Montana', 'Nebraska', 'Nevada', 'New Hampshire', 'New Jersey', 'New Mexico',\n    'New York', 'North Carolina', 'North Dakota', 'Ohio', 'Oklahoma', 'Oregon', 'Pennsylvania',\n    'Rhode Island', 'South Carolina', 'South Dakota', 'Tennessee', 'Texas', 'Utah', 'Vermont',\n    'Virginia', 'Washington', 'West Virginia', 'Wisconsin', 'Wyoming'\n  ];\n  \n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/checkout/checkout.component.ts","module.exports = \".demo-tab-group {\\n    border: 1px solid #e8e8e8;\\n  }\\n  \\n.demo-tab-content {\\n    padding: 16px;\\n}\\n  \\n.outline{\\n    width: 70%;\\n    margin-left: auto; \\n    margin-right: auto;\\n}\\n  \\n.half-width{\\n    width:60%;\\n}\\n  \\n.row{\\n    padding : 1em;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dashboard/dashboard.component.css\n// module id = ./src/app/dashboard/dashboard.component.css\n// module chunks = main","module.exports = \"<div style=\\\"text-align: center;\\\">\\n  <div class=\\\"content\\\">\\n    <mat-card class=\\\"outline\\\">\\n        <mat-card-content>\\n          <h2 class=\\\"example-h2\\\">Hi</h2>\\n          <mat-tab-group class=\\\"demo-tab-group\\\">\\n            <mat-tab label=\\\"Account Information\\\">\\n              <div class=\\\"demo-tab-content\\\"  style=\\\"width:80%\\\">          \\n                <form [formGroup]=\\\"formGroup2\\\" #f=\\\"ngForm\\\" (ngSubmit)=\\\"update(f.value)\\\"> \\n                  <mat-list>\\n                    <mat-list-item class=\\\"row\\\">\\n                          <mat-form-field class=\\\"half-width\\\">\\n                            <input matInput formControlName=\\\"firstName\\\" placeholder=\\\"First Name\\\" [(ngModel)]=\\\"user.firstName\\\" required>\\n                          </mat-form-field>\\n                    </mat-list-item>\\n                    <mat-list-item class=\\\"row\\\">\\n                          <mat-form-field class=\\\"half-width\\\">\\n                            <input matInput formControlName=\\\"lastName\\\" placeholder=\\\"Last Name\\\" [(ngModel)]=\\\"user.lastName\\\" required>\\n                          </mat-form-field>\\n                    </mat-list-item>\\n                    <mat-list-item class=\\\"row\\\">\\n                            <mat-form-field class=\\\"half-width\\\">\\n                              <input matInput name=\\\"email\\\" placeholder=\\\"Email\\\" value={{user.email}} disabled>\\n                            </mat-form-field>\\n                    </mat-list-item>\\n                  </mat-list>\\n                  <div>\\n                      <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Update</button>\\n                  </div>\\n                </form>\\n              </div>\\n            </mat-tab>\\n\\n            <mat-tab label=\\\"Order History\\\">\\n              <div class=\\\"demo-tab-content\\\">\\n                  <div class=\\\"example-container mat-elevation-z8\\\">\\n                      <mat-table #table [dataSource]=\\\"dataSource\\\">\\n                    \\n                        <!-- Position Column -->\\n                        <ng-container matColumnDef=\\\"position\\\">\\n                          <mat-header-cell *matHeaderCellDef> No. </mat-header-cell>\\n                          <mat-cell *matCellDef=\\\"let element\\\"> {{element.orderNumber}} </mat-cell>\\n                        </ng-container>\\n                    \\n                        <!-- Name Column -->\\n                        <ng-container matColumnDef=\\\"name\\\">\\n                          <mat-header-cell *matHeaderCellDef> Product </mat-header-cell>\\n                          <mat-cell *matCellDef=\\\"let element\\\"> {{element.product}} </mat-cell>\\n                        </ng-container>\\n                    \\n                        <!-- Weight Column -->\\n                        <ng-container matColumnDef=\\\"weight\\\">\\n                          <mat-header-cell *matHeaderCellDef> Quantity </mat-header-cell>\\n                          <mat-cell *matCellDef=\\\"let element\\\"> {{element.quantity}} </mat-cell>\\n                        </ng-container>\\n                    \\n                        <!-- Symbol Column -->\\n                        <ng-container matColumnDef=\\\"symbol\\\">\\n                          <mat-header-cell *matHeaderCellDef> Price </mat-header-cell>\\n                          <mat-cell *matCellDef=\\\"let element\\\"> {{element.price}} </mat-cell>\\n                        </ng-container>\\n                    \\n                        <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n                        <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n                      </mat-table>\\n                    \\n                      <mat-paginator #paginator\\n                                     [pageSize]=\\\"5\\\"\\n                                     [pageSizeOptions]=\\\"[5, 10, 20]\\\"\\n                                     [showFirstLastButtons]=\\\"true\\\">\\n                      </mat-paginator>\\n                    </div>\\n              </div>  \\n            </mat-tab>\\n\\n\\n            <mat-tab label=\\\"Saved Address\\\">\\n                <div class=\\\"demo-tab-content\\\"  style=\\\"width:80%\\\">          \\n                    <form [formGroup]=\\\"formGroup1\\\" #f2=\\\"ngForm\\\" (ngSubmit)=\\\"updateAddress(f2.value)\\\"> \\n                      <mat-list>\\n                        <mat-list-item class=\\\"row\\\">\\n                              <mat-form-field class=\\\"half-width\\\">\\n                                <input matInput formControlName=\\\"address1\\\" placeholder=\\\"Address 1\\\" [(ngModel)] = \\\"localAddress.addr_1\\\" required>\\n                              </mat-form-field>\\n                        </mat-list-item>\\n                        <mat-list-item class=\\\"row\\\">\\n                                <mat-form-field class=\\\"half-width\\\">\\n                                  <input matInput name=\\\"address2\\\" placeholder=\\\"Address 2\\\" value=\\\"{{localAddress.addr_2}}\\\">\\n                                </mat-form-field>\\n                        </mat-list-item>\\n                        <mat-list-item class=\\\"row\\\">\\n                            <mat-form-field>\\n                                <mat-select placeholder=\\\"Choose your state\\\" formControlName=\\\"state\\\" [(ngModel)]=\\\"selectedState\\\" required>\\n                                  <mat-option *ngFor=\\\"let state of states\\\" [value]=\\\"state\\\">{{state}}</mat-option>\\n                                </mat-select>\\n                              </mat-form-field>\\n                        </mat-list-item>\\n                        <mat-list-item class=\\\"row\\\">\\n                          <mat-form-field>\\n                            <input matInput placeholder=\\\"City\\\" formControlName=\\\"city\\\" [(ngModel)]=\\\"localAddress.city\\\" required>\\n                          </mat-form-field>\\n                        </mat-list-item>\\n                        <mat-list-item class=\\\"row\\\">\\n                          <mat-form-field>\\n                            <input matInput #zipcode placeholder=\\\"Zip Code\\\" formControlName=\\\"zip\\\" [(ngModel)]=\\\"localAddress.zip\\\" maxlength=\\\"5\\\" required>\\n                            <mat-hint align=\\\"end\\\">{{zipcode.value.length}} / 5</mat-hint>\\n                          </mat-form-field>\\n                        </mat-list-item>\\n                        <mat-list-item class=\\\"row\\\">\\n                          <mat-form-field>\\n                            <input type=\\\"tel\\\" matInput placeholder=\\\"Phone Number\\\" formControlName=\\\"phone\\\" [(ngModel)]=\\\"localAddress.phone\\\" maxlength=\\\"10\\\" required>\\n                          </mat-form-field>\\n                        </mat-list-item>\\n                      </mat-list>\\n                      <div>\\n                          <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Update</button>\\n                      </div>\\n                    </form>\\n                  </div>\\n            </mat-tab>\\n\\n            <mat-tab label=\\\"Tab 4\\\">\\n              <div class=\\\"demo-tab-content\\\">\\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla venenatis ante augue.\\n                Phasellus volutpat neque ac dui mattis vulputate. Etiam consequat aliquam cursus.\\n                In sodales pretium ultrices. Maecenas lectus est, sollicitudin consectetur felis nec,\\n                feugiat ultricies mi. Aliquam erat volutpat. Nam placerat, tortor in ultrices porttitor,\\n                orci enim rutrum enim, vel tempor sapien arcu a tellus.\\n                <br />\\n                <br />\\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla venenatis ante augue.\\n                Phasellus volutpat neque ac dui mattis vulputate. Etiam consequat aliquam cursus.\\n                In sodales pretium ultrices. Maecenas lectus est, sollicitudin consectetur felis nec,\\n                feugiat ultricies mi. Aliquam erat volutpat. Nam placerat, tortor in ultrices porttitor,\\n                orci enim rutrum enim, vel tempor sapien arcu a tellus.\\n              </div>  \\n            </mat-tab>\\n          </mat-tab-group>\\n        </mat-card-content>\\n      </mat-card>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dashboard/dashboard.component.html\n// module id = ./src/app/dashboard/dashboard.component.html\n// module chunks = main","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { NgForm } from '@angular/forms';\nimport { MatPaginator} from '@angular/material';\nimport { MatTableDataSource } from '@angular/material/table';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  //user: User;\n  user = [];\n  selectedState = \"\";\n  localAddress = [];\n  formGroup1: FormGroup;//for saved address tab\n  formGroup2: FormGroup;//for userinfo tab\n  displayedColumns = ['position', 'name', 'weight', 'symbol'];\n  dataSource = new MatTableDataSource<any>();\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  constructor(private httpClient:HttpClient, private _formBuilder: FormBuilder){  }\n\n  ngOnInit() {\n    this.formGroup1 = this._formBuilder.group({\n      state: ['', Validators.required],\n      city: ['', Validators.required],\n      address1: ['', Validators.required],\n      zip: ['', Validators.required],\n      phone: ['', Validators.required]\n    });\n\n    this.formGroup2 = this._formBuilder.group({\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required]\n    });\n    //id should be replaced by the return value from server side\n    //get user info for info and address tabs\n    this.httpClient.get(`https://my-json-server.typicode.com/Emilyyan/Shopping-Website/Users?id=1`)\n    .subscribe(\n      (data:any[]) => {\n        if(data.length) {\n          console.log(data[0]);\n          this.user = data[0];\n          this.localAddress  = data[0].address;\n          this.selectedState = data[0].address.state;\n        }\n      }, \n      error => console.log(\"Error\", error)\n      //() => {this.xxx();}\n    );\n\n    //order history should be returned from server side after authentication\n    //get order info for order history tab\n    this.httpClient.get(`https://my-json-server.typicode.com/Emilyyan/Shopping-Website/Orders`)\n    .subscribe(\n      (data:any[]) => {\n        if(data.length) {\n          this.dataSource.data = data;\n          //console.log(this.dataSource.data);\n        }\n      }, \n      error => console.log(\"Error\", error)\n      //() => {this.xxx();}\n    )\n\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n  }\n\n  //update user info tab\n  update = function(userinfo) {\n    if(this.formGroup2.valid){\n    //below link if only for testing front end logic\n      this.httpClient.post(`https://my-json-server.typicode.com/Emilyyan/Shopping-Website/Users`, {email: userinfo.email, first_name: userinfo.firstName, last_name: userinfo.lastName})\n     //this.httpClient.post(`/register-users`, {email: user.email, first_name: user.firstName, last_name: user.lastName})\n        .subscribe(\n          res => console.log(res)\n        )\n    }\n  }\n\n  //update saved address info tab\n  updateAddress = function(changedAddress) {\n    //below link if only for testing front end logic\n    if(this.formGroup1.valid){\n      this.httpClient.post(`https://my-json-server.typicode.com/Emilyyan/Shopping-Website/Users`, {changedAddress})\n      //this.httpClient.post(`/register-users`, {email: user.email, first_name: user.firstName, last_name: user.lastName})\n        .subscribe(\n          res => console.log(res)\n        )\n    }\n  }\n\n\n  states = [\n    'Alabama', 'Alaska', 'Arizona', 'Arkansas', 'California', 'Colorado', 'Connecticut', 'Delaware',\n    'Florida', 'Georgia', 'Hawaii', 'Idaho', 'Illinois', 'Indiana', 'Iowa', 'Kansas', 'Kentucky',\n    'Louisiana', 'Maine', 'Maryland', 'Massachusetts', 'Michigan', 'Minnesota', 'Mississippi',\n    'Missouri', 'Montana', 'Nebraska', 'Nevada', 'New Hampshire', 'New Jersey', 'New Mexico',\n    'New York', 'North Carolina', 'North Dakota', 'Ohio', 'Oklahoma', 'Oregon', 'Pennsylvania',\n    'Rhode Island', 'South Carolina', 'South Dakota', 'Tennessee', 'Texas', 'Utah', 'Vermont',\n    'Virginia', 'Washington', 'West Virginia', 'Wisconsin', 'Wyoming'\n  ];\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/dashboard.component.ts","module.exports = \".parent-container{\\n    max-width: 90%;\\n    margin: 0 auto;\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n    -ms-flex-wrap: wrap;\\n        flex-wrap: wrap;\\n    -ms-flex-pack: distribute;\\n        justify-content: space-around;\\n}\\n.example-card {\\n    max-width: 250px;\\n    min-width: 200px;\\n    -ms-flex-preferred-size: 30%;\\n        flex-basis: 30%;\\n    margin-bottom: 2em;\\n}\\n.in-stock{\\n    color: #2e7b32;\\n}\\n.out-of-stock{\\n    color: #d32f2f;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/home.component.css\n// module id = ./src/app/home/home.component.css\n// module chunks = main","module.exports = \"<!--the Homepage component template, written in HTML.-->\\n<div style=\\\"text-align:center\\\">\\n  <div class=\\\"content\\\">\\n    <span class=\\\"spacer\\\"></span>\\n    <mat-form-field>\\n      <input matInput placeholder=\\\"Search Items here ...\\\">\\n    </mat-form-field>\\n    <button mat-icon-button color=\\\"primary\\\"><mat-icon>search</mat-icon></button>\\n\\n    <div class=\\\"parent-container\\\">\\n      <mat-card class=\\\"example-card\\\" *ngFor=\\\"let p of products\\\">\\n        <img mat-card-image src={{p.img}} alt=\\\"Product Image\\\">\\n        <mat-card-content>\\n          <mat-card-title>{{p.name}}</mat-card-title>\\n          <mat-card-subtitle>\\n            ${{p.price}} &nbsp;&nbsp;&nbsp;\\n            <span *ngIf=\\\"p.stock > 0\\\" class=\\\"in-stock\\\">In Stock</span>\\n            <span *ngIf=\\\"p.stock == 0\\\" class=\\\"out-of-stock\\\">Out of Stock</span>\\n          </mat-card-subtitle>\\n          <p>{{p.desc}}</p>\\n        </mat-card-content>\\n        <mat-card-actions>\\n          <button mat-button color=\\\"primary\\\" (click)=\\\"openDetail(p.id)\\\">Details\\n            <mat-icon>open_in_new</mat-icon>\\n          </button>\\n          <button mat-button color=\\\"accent\\\">Add to Cart\\n            <mat-icon>add_shopping_cart</mat-icon>\\n          </button>\\n        </mat-card-actions>\\n      </mat-card>\\n    </div>\\n  </div>  \\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/home.component.html\n// module id = ./src/app/home/home.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { MatDialog } from '@angular/material';\nimport { ProductDetailComponent } from '../product-detail/product-detail.component';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\n\nexport class HomeComponent implements OnInit {\n  products : Product[];\n  constructor(private httpClient:HttpClient, public dialog: MatDialog){  }\n\n  ngOnInit() {\n    this.httpClient.get(`https://my-json-server.typicode.com/Emilyyan/Shopping-Website/Products`)\n    .subscribe(\n      (data:any[]) => {\n        if(data.length) {\n          console.log(data);\n          this.products = data;\n        }\n      }\n    )\n  }\n\n  openDetail(PID) {\n    const dialogRef = this.dialog.open(ProductDetailComponent, {\n      height: '60%',\n      width: '60%',\n      data: {\n        PID: PID\n      }\n    });\n  }\n}\n\nexport interface Product {\n  id: number;\n  name: string;\n  price: number;\n  stock: number;\n  desc: string;\n  img: string;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/home.component.ts","module.exports = \".fixed-header{\\n    /*overflow: auto;*/\\n    top: 0;\\n    left: 0;\\n    position: fixed;\\n    z-index: 999;\\n}\\n.spacer {\\n    -webkit-box-flex: 1;\\n        -ms-flex: 1 1 auto;\\n            flex: 1 1 auto;\\n}\\n.mdl-badge[data-badge]::after{\\n  font-size: .3em;\\n  width: 2em;\\n  height: 2em;\\n}\\n.mdl-badge[data-badge]::after {\\n  top: -1em;\\n  right: -1em;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/navbar/navbar.component.css\n// module id = ./src/app/navbar/navbar.component.css\n// module chunks = main","module.exports = \"<div>\\n    <mat-toolbar class=\\\"fixed-header\\\" color=\\\"primary\\\">\\n        <mat-toolbar-row>\\n            <a mat-button routerLink=\\\"/\\\"><mat-icon>home</mat-icon></a>\\n            <button mat-button [matMenuTriggerFor]=\\\"menu\\\" >Menu</button>\\n            <mat-menu #menu=\\\"matMenu\\\" yPosition=\\\"below\\\" xPosition=\\\"after\\\" overlapTrigger=\\\"false\\\">\\n                <button mat-menu-item>Item 1</button>\\n                <button mat-menu-item>Item 2</button>\\n            </mat-menu>\\n            \\n            <span class=\\\"spacer\\\"></span>\\n            <a mat-icon-button routerLink=\\\"/cart\\\"><mat-icon class=\\\"mdl-badge\\\" data-badge=\\\"6\\\">shopping_cart</mat-icon></a>\\n            <!--<a mat-button routerLink=\\\"/signin\\\">Sign In</a>-->\\n            <!--<a mat-button routerLink=\\\"/signup\\\">Sign Up</a>-->\\n            <button mat-button (click)=\\\"openSignin()\\\">Sign In</button>\\n            <button mat-button (click)=\\\"openSignup()\\\">Sign Up</button>\\n            \\n        </mat-toolbar-row> \\n    </mat-toolbar>\\n</div>\\n<router-outlet></router-outlet>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/navbar/navbar.component.html\n// module id = ./src/app/navbar/navbar.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { SignInComponent } from '../sign-in/sign-in.component';\nimport { SignUpComponent } from '../sign-up/sign-up.component';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit{\n  ngOnInit() {\n  }\n\n  constructor(public dialog: MatDialog) {}\n\n  openSignin() {\n    const dialogRef = this.dialog.open(SignInComponent, {\n      height: '45%',\n      width: '40%'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(`Dialog result: ${result}`);\n    });\n  }\n\n  openSignup() {\n    const dialogRef = this.dialog.open(SignUpComponent, {\n      height: '45%',\n      width: '40%'\n    });\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/navbar/navbar.component.ts","module.exports = \"mat-grid-tile {\\n    background: lightblue;\\n  }\\n\\n\\n.page-container{\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n}\\n\\n\\n.left-container{\\n    -webkit-box-flex: 2;\\n        -ms-flex: 2;\\n            flex: 2;\\n}\\n\\n\\n.right-container{\\n    -webkit-box-flex: 2;\\n        -ms-flex: 2;\\n            flex: 2;\\n}\\n\\n\\n.product-img {\\n    max-width: 400px;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/product-detail/product-detail.component.css\n// module id = ./src/app/product-detail/product-detail.component.css\n// module chunks = main","module.exports = \"<div style=\\\"text-align:center\\\">\\n  \\n      <div class=\\\"page-container\\\">\\n          <div class=\\\"left-container\\\">\\n              <img class=\\\"product-img\\\" src={{p.img}} alt=\\\"Product Image\\\">\\n          </div>\\n\\n          <div class=\\\"right-container\\\">\\n              <mat-card-title>{{p.name}}</mat-card-title>\\n              ${{p.price}} &nbsp;&nbsp;&nbsp;\\n              <span *ngIf=\\\"p.stock > 0\\\" class=\\\"in-stock\\\">In Stock</span>\\n              <span *ngIf=\\\"p.stock == 0\\\" class=\\\"out-of-stock\\\">Out of Stock</span>\\n              <p>{{p.desc}}</p>\\n          </div>\\n\\n      </div>\\n  </div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/product-detail/product-detail.component.html\n// module id = ./src/app/product-detail/product-detail.component.html\n// module chunks = main","import { Component, OnInit, Inject } from '@angular/core';\nimport {MAT_DIALOG_DATA} from '@angular/material';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-product-detail',\n  templateUrl: './product-detail.component.html',\n  styleUrls: ['./product-detail.component.css']\n})\nexport class ProductDetailComponent implements OnInit {\n  p = {\n    name: \"\", \n    stock: 0,\n    price: 0,\n    img: \"\",\n    desc: \"\"\n  };\n\n  constructor(private httpClient:HttpClient, @Inject(MAT_DIALOG_DATA) public data: any) { }\n \n\n  ngOnInit() {\n   // will log the entire data object\n   //console.log(this.data.PID);\n\n   this.httpClient.get(`https://my-json-server.typicode.com/Emilyyan/Shopping-Website/Products/?id=${this.data.PID}`)\n    .subscribe(\n      (userInfo:any[]) => {\n        if(userInfo.length) {\n          console.log(userInfo[0]);\n          this.p.name = userInfo[0].name;\n          this.p.stock = userInfo[0].stock;\n          this.p.price = userInfo[0].price;\n          this.p.img = userInfo[0].img;\n          this.p.desc = userInfo[0].desc;\n        }\n      }\n    )\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/product-detail/product-detail.component.ts","module.exports = \".page-container{\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n}\\n.left-container{\\n    -webkit-box-flex: 3;\\n        -ms-flex: 3;\\n            flex: 3;\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n    -webkit-box-orient: vertical;\\n    -webkit-box-direction: normal;\\n        -ms-flex-direction: column;\\n            flex-direction: column;\\n    min-width: 300px;\\n    padding: 0 2em;\\n}\\n.left-header{\\n    min-height: 64px;\\n    padding: 8px 24px 0;\\n}\\n.mat-form-field {\\n    font-size: 14px;\\n    width: 100%;\\n}\\n.right-container{\\n    -webkit-box-flex: 1;\\n        -ms-flex: 1;\\n            flex: 1;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shoppingcart/shoppingcart.component.css\n// module id = ./src/app/shoppingcart/shoppingcart.component.css\n// module chunks = main","module.exports = \"<div class=\\\"content\\\">\\n  \\n  <div class=\\\"page-container\\\">\\n    <div class=\\\"left-container\\\">\\n      <h4>Shopping Cart</h4>\\n<!--\\n      <div class=\\\"left-header\\\">\\n        <mat-form-field>\\n          <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n        </mat-form-field>\\n      </div>\\n    -->\\n      <mat-table #table [dataSource]=\\\"cartitems\\\">\\n\\n        <!-- Product Column -->\\n        <ng-container matColumnDef=\\\"product\\\">\\n          <mat-header-cell  *matHeaderCellDef>Product</mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let element\\\"> \\n            {{element.product}} \\n          </mat-cell>\\n\\n        </ng-container>\\n    \\n        <!-- Quantity Column -->\\n        <ng-container matColumnDef=\\\"quantity\\\">\\n          <mat-header-cell *matHeaderCellDef>Quantity</mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let element\\\" > \\n            <button mat-icon-button color=\\\"primary\\\" (click)=\\\"element.quantity = element.quantity - 1\\\">\\n              <mat-icon>remove</mat-icon>\\n            </button>\\n            {{element.quantity}} \\n            <button mat-icon-button color=\\\"primary\\\" (click)=\\\"element.quantity = element.quantity + 1\\\">\\n              <mat-icon>add</mat-icon>\\n            </button>\\n          </mat-cell>\\n        </ng-container>\\n    \\n        <!-- Price Column -->\\n        <ng-container matColumnDef=\\\"price\\\">\\n          <mat-header-cell *matHeaderCellDef> Price </mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let element\\\"> ${{element.price}} </mat-cell>\\n        </ng-container>\\n    \\n        <!-- Total Price Column -->\\n        <ng-container matColumnDef=\\\"total_price\\\">\\n          <mat-header-cell *matHeaderCellDef> Total Price</mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let element\\\"> ${{element.quantity * element.price}} </mat-cell>\\n        </ng-container>\\n    \\n        <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n        <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n      </mat-table>\\n    </div>\\n\\n    <div class=\\\"right-container\\\">\\n      <h5>\\n        Subtotal ({{itemsCnt}} item<span *ngIf=\\\"itemsCnt>1\\\">s</span>): ${{subTotal}}\\n      </h5>\\n      <button mat-raised-button (click)=\\\"updateCart()\\\">\\n        Update Your Cart\\n      </button>\\n      <button mat-raised-button color=\\\"accent\\\" routerLink=\\\"/checkout\\\">\\n        Proceed to Checkout\\n        <mat-icon>navigate_next</mat-icon>\\n      </button>\\n      \\n    </div>\\n  </div>\\n\\n</div>\\n\\n  \\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shoppingcart/shoppingcart.component.html\n// module id = ./src/app/shoppingcart/shoppingcart.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {MatTableDataSource} from '@angular/material';\nimport { element } from 'protractor';\nimport { DataSource } from '@angular/cdk/collections';\nimport { DecimalPipe } from '@angular/common';\nimport {CartItem} from '../interfaces';\n\n@Component({\n  selector: 'app-shoppingcart',\n  templateUrl: './shoppingcart.component.html',\n  styleUrls: ['./shoppingcart.component.css']\n})\nexport class ShoppingcartComponent implements OnInit {\n  cartitems : CartItem[];\n  constructor(private httpClient:HttpClient){  }\n  //ds = new MatTableDataSource(this.cartitems);\n  subTotal = 0;\n  itemsCnt = 0;\n\n  ngOnInit() {\n    this.httpClient.get(`https://my-json-server.typicode.com/Emilyyan/Shopping-Website/Cart`)\n    .subscribe(\n      (data:any[]) => {\n        if(data.length) {\n          this.cartitems = data;\n        }\n      },\n      error => console.log(\"Error: \", error),\n      () => {\n        this.calcSubTotal(); \n        this.countItems();\n      }\n    )\n  }\n\n  displayedColumns = ['product', 'quantity', 'price', 'total_price'];\n\n  private calcSubTotal(){\n    let s = 0;\n      for(let e of this.cartitems){\n        s += (e.price * e.quantity);\n      }\n    this.subTotal = s;\n  }\n  \n  private countItems(){\n    let count = 0;\n      for(let e of this.cartitems){\n        count += e.quantity;\n      }\n    this.itemsCnt = count;\n  }\n\n  updateCart(){\n    this.httpClient.post(`https://my-json-server.typicode.com/Emilyyan/Shopping-Website/Cart`, this.cartitems)\n      .subscribe(\n        res => console.log(res),\n        error => console.log(error),\n        () => {\n          this.calcSubTotal();\n          this.countItems();\n        }\n      ); \n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shoppingcart/shoppingcart.component.ts","module.exports = \".example-container {\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n    -webkit-box-orient: vertical;\\n    -webkit-box-direction: normal;\\n        -ms-flex-direction: column;\\n            flex-direction: column;\\n}\\n    \\n.example-container > * {\\n    width: 100%;\\n}\\n    \\nmat-dialog-content{\\n    display: inline\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/sign-in/sign-in.component.css\n// module id = ./src/app/sign-in/sign-in.component.css\n// module chunks = main","module.exports = \"<mat-dialog-content>  \\n    <h2 mat-dialog-title>Please sign in</h2>\\n    <form #signin=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(signin.value)\\\">\\n        <mat-form-field class=\\\"example-container\\\">\\n            <input ngModel name=\\\"email\\\" matInput placeholder=\\\"Enter your email\\\" [formControl]=\\\"email\\\" required>\\n            <mat-error *ngIf=\\\"email.invalid\\\">{{getErrorMessage()}}</mat-error>\\n        </mat-form-field>\\n        <br>\\n        <mat-form-field  class=\\\"example-container\\\">\\n            <input matInput ngModel name=\\\"password\\\" placeholder=\\\"Enter your password\\\" [type]=\\\"hide ? 'password' : 'text'\\\" required>\\n            <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\n        </mat-form-field>\\n\\n        <mat-dialog-actions>\\n            <!--<button mat-raised-button color=\\\"primary\\\" [mat-dialog-close]=\\\"true\\\">Sign In</button>-->\\n            <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Sign In</button>\\n            <button mat-button mat-dialog-close>Cancel</button>\\n            <!-- The mat-dialog-close directive optionally accepts a value as a result for the dialog. -->\\n            \\n        </mat-dialog-actions>\\n    </form>\\n</mat-dialog-content>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/sign-in/sign-in.component.html\n// module id = ./src/app/sign-in/sign-in.component.html\n// module chunks = main","import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { FormControl, Validators } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\n\n\n@Component({\n  selector: 'app-sign-in',\n  templateUrl: './sign-in.component.html',\n  styleUrls: ['./sign-in.component.css']\n})\nexport class SignInComponent{\n  hide = true;\n  email = new FormControl('', [Validators.required, Validators.email]);\n\n  getErrorMessage() {\n    return this.email.hasError('required') ? 'You must enter a value' :\n        this.email.hasError('email') ? 'Not a valid email' : '';\n  }\n\n  password: string = \"\";\n  firstName : string = \"\";\n  lastName: string = \"\";\n\n  constructor(private httpClient:HttpClient){  }\n\n  onSubmit = function(user) {\n    this.httpClient.post(`/login-users`, {email: this.email.value, password: user.password})\n    .subscribe(\n      (data:any[]) => {\n        if(data.length) {\n          this.firstName = data[0].first_name;\n          this.lastName = data[0].last_name;\n          console.log(this.first_name + \" \" + this.last_name);\n        }\n      }\n    )\n\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/sign-in/sign-in.component.ts","module.exports = \".example-container {\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n    -webkit-box-orient: vertical;\\n    -webkit-box-direction: normal;\\n        -ms-flex-direction: column;\\n            flex-direction: column;\\n}\\n    \\n.example-container > * {\\n    width: 100%;\\n}\\n    \\nmat-dialog-content{\\n    display: inline\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/sign-up/sign-up.component.css\n// module id = ./src/app/sign-up/sign-up.component.css\n// module chunks = main","module.exports = \"<mat-dialog-content>  \\n    <h2 mat-dialog-title>Register with us</h2>\\n    <form #f=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(f.value)\\\">\\n        <mat-form-field class=\\\"example-container\\\">\\n            <input matInput ngModel name=\\\"email\\\" placeholder=\\\"Enter your email\\\" [formControl]=\\\"email\\\" required>\\n            <mat-error *ngIf=\\\"email.invalid\\\">{{getErrorMessage()}}</mat-error>\\n        </mat-form-field>\\n        <mat-form-field>\\n            <input matInput ngModel name=\\\"firstName\\\" placeholder=\\\"FirstName\\\" required>\\n        </mat-form-field>\\n        <mat-form-field>\\n            <input matInput ngModel name=\\\"lastName\\\" placeholder=\\\"LastName\\\" required>\\n        </mat-form-field>\\n        <br>\\n        <mat-form-field  class=\\\"example-container\\\">\\n            <input matInput ngModel name=\\\"password\\\" placeholder=\\\"Enter your password\\\" [type]=\\\"hide ? 'password' : 'text'\\\" required>\\n            <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\n        </mat-form-field>\\n\\n        <mat-dialog-actions>\\n            <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Register</button>\\n            <button mat-button mat-dialog-close>Cancel</button>\\n            <!-- The mat-dialog-close directive optionally accepts a value as a result for the dialog. -->\\n            \\n        </mat-dialog-actions>\\n    </form>\\n</mat-dialog-content>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/sign-up/sign-up.component.html\n// module id = ./src/app/sign-up/sign-up.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport {MatDialog} from '@angular/material';\nimport {FormControl, Validators} from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport {NgForm} from '@angular/forms';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.css']\n})\nexport class SignUpComponent{\n  constructor(private httpClient:HttpClient){  }\n\n  hide = true;\n  email = new FormControl('', [Validators.required, Validators.email]);\n\n  //email validation function\n  getErrorMessage() {\n    return this.email.hasError('required') ? 'You must enter a value' :\n        this.email.hasError('email') ? 'Not a valid email' : '';\n  }\n\n  //when click submit, do post\n  onSubmit = function(user) {\n    console.log(user);\n    if (this.email.valid) {\n      console.log(user.lastName);\n      console.log(this.email.value);\n      //hash logic may go here\n     this.httpClient.post(`/register-users`, {email: this.email.value, first_name: user.firstName, last_name: user.lastName, password: user.password})\n      .subscribe(\n        res => console.log(res)\n      );\n      \n    }\n    else\n      console.log(\"fail\");\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/sign-up/sign-up.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}